service: import-service

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: eu-west-1

  environment:
    S3_BUCKET: "import-service-aws-js-course"
    SQS_URL:
      'Fn::ImportValue': 'SQSUrl'
    # SQS_URL:
      # ${output:product-service.SQSUrl}
      

  iam:
    role:
      statements:
        - Effect: Allow
          Action: "s3:ListBucket"
          Resource:
            - "arn:aws:s3:::${self:provider.environment.S3_BUCKET}"
        - Effect: Allow
          Action: "s3:*"
          Resource:
            - "arn:aws:s3:::${self:provider.environment.S3_BUCKET}/*"
        - Effect: Allow
          Action: "sqs:*"
          # Resource: ${output:product-service.SQSArn}
          Resource: 
            'Fn::ImportValue': 'SQSArn'

functions:
  importProductsFile:
    handler: handlers/importProductsFile.importProductsFile
    events:
      - http:
          method: get
          path: /import
          cors: true
          request:
            parameters:
              querystrings:
                name: true          	
          authorizer:
            arn: arn:aws:lambda:eu-west-1:770955452549:function:authorization-service-dev-basicAuthorizer
            # no caching:
            resultTtlInSeconds: 0
            # identitySource: method.request.header.Authorization
            # identityValidationExpression: someRegex
            type: token
  importFileParser:
    handler: handlers/importFileParser.importFileParser
    events:
      - s3:
          bucket: ${self:provider.environment.S3_BUCKET}
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploaded/
            - suffix: .csv
          existing: true
