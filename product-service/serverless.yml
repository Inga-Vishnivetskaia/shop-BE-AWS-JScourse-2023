service: product-service
frameworkVersion: "3"

provider:
  name: aws
  runtime: nodejs18.x
  stage: dev
  region: eu-west-1

  # define environment variables globally
  environment:
    DYNAMODB_TABLE_PRODUCTS: "products-AWS-JS-course"
    DYNAMODB_TABLE_STOCKS: "stocks-AWS-JS-course"
    snsArn:
      Ref: SNSTopic
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: [
             "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_PRODUCTS}",
             "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE_STOCKS}",
          ]
        - Effect: Allow
          Action:
            - sns:*
          Resource:
            Ref: SNSTopic

functions:
  getProductsList:
    handler: handlers/getProductsList.getProductsList
    timeout: 15
    description: gets all products from joined Dynamo DB tables (products, stocks)
    events:
      - http:
          path: products
          method: get
          cors: true
  getProductById:
    handler: handlers/getProductById.getProductById
    timeout: 15
    events:
      - http:
          path: products/{productId}
          method: get
          cors: true
  createProduct:
    handler: handlers/createProduct.createProduct
    events:
      - http:
          path: products
          method: post
          cors: true
  catalogBatchProcess:
    handler: handlers/catalogBatchProcess.catalogBatchProcess
    events:
      - sqs:
          batchSize: 5
          # arn: !GetAtt SQSQueue.Arn
          arn:
            Fn::GetAtt:
              - SQSQueue
              - Arn

# you can add CloudFormation resource templates here
resources:
  Resources:
    SQSQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: SQS-aws-js-course-2023
    SNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: product-added-to-DynamoDB
    SNSSubscription:
      Type: AWS::SNS::Subscription
      Properties:
        Endpoint: inga.vishnivetskaia@gmail.com
        Protocol: email
        TopicArn:
          Ref: SNSTopic

  # Define outputs for shared services
  Outputs:
    SQSArn:
      Value:
        Fn::GetAtt:
          - SQSQueue
          - Arn
      Export:
        Name: SQSArn
    SQSUrl:
      Value:
        Ref: SQSQueue
      Export:
        Name: SQSUrl